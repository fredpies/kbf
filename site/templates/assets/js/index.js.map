{"version":3,"file":"index.js","sources":["../../js/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../js/node_modules/@babel/runtime/helpers/esm/createClass.js","../../js/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../js/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../js/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../js/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../js/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../js/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../js/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../js/node_modules/@babel/runtime/helpers/esm/inherits.js","../../js/node_modules/@babel/runtime/helpers/esm/typeof.js","../../js/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../js/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../js/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../js/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../../js/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../js/node_modules/@babel/runtime/helpers/esm/construct.js","../../js/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../../js/modules/Errors.js","../../js/node_modules/perfect-scrollbar/src/lib/css.js","../../js/components/KbfDropdown.js","../../js/node_modules/regenerator-runtime/runtime.js","../../js/functions/library.js","../../js/components/KbfAreaSwitcher.js","../../js/components/KbfFooterTop.js","../../js/components/KbfPreloaderButton.js","../../js/index/components/App.js","../../js/index/entry.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","let errors = {};\r\n\r\n// Wyjatki\r\n\r\n// Nie znaleziono elementu DOM\r\nerrors.elementNotFound = function (selector) {\r\n    return new Error(`Cannot find elements with selector \"${selector}\"`);\r\n}\r\n\r\n// Nie znaleziono formularza\r\nerrors.formNotFound = function (formName) {\r\n    return new Error(`Cannot find form with name \"${formName}\"`);\r\n}\r\n\r\n// Nie podano argumentu\r\nerrors.argumentNotFound = function (argumentName) {\r\n    return new Error(`${argumentName.substring(0, 1).toUpperCase() + argumentName.substring(1)} argument cannot be empty`);\r\n}\r\n\r\n// Brak walidatora dla formularza\r\nerrors.noValidator = function () {\r\n    return new Error(`No JQuery validator plugin`);\r\n}\r\n\r\n// Nie podano wspolrzednych geograficznych\r\nerrors.noGeoCoords = function () {\r\n    return new Error(`You must provide geo coordinates.`);\r\n}\r\n\r\nexport default errors;","export function get(element) {\n  return getComputedStyle(element);\n}\n\nexport function set(element, obj) {\n  for (const key in obj) {\n    let val = obj[key];\n    if (typeof val === 'number') {\n      val = `${val}px`;\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n","import errors from \"../modules/Errors\";\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\nclass KbfDropdown extends EventTarget {\r\n\r\n    constructor(selector, opts = [], scrollBlock = true) {\r\n\r\n        super();\r\n\r\n        let $ = window.$;\r\n\r\n        // Sprawdz poprawnosc argumentow\r\n        if (selector === undefined) throw errors.argumentNotFound('selector');\r\n\r\n        this.selector = selector;\r\n        this.opts = opts;\r\n\r\n        this.scrollBlock = scrollBlock; // Czy blokowac scroll po otwarciu dropdown\r\n\r\n        this.init(); // Inicjalizuj\r\n        this.addListeners(); // Dodaj event listenery\r\n        this.initScrollBar(); // Inicjuj scrollbar\r\n\r\n    }\r\n\r\n    init() {\r\n\r\n        let $ = window.$;\r\n\r\n        // Aliasy\r\n        this.on = this.addEventListener;\r\n        this.off = this.removeEventListener;\r\n        this.emit = this.dispatchEvent;\r\n\r\n        this.$dropdowns = $(this.selector);\r\n\r\n        // Ustaw opcje z atrybuty data-options\r\n        let dataOptions = this.$dropdowns.data('options');\r\n        if (dataOptions) this.opts = dataOptions.split(',');\r\n\r\n        // Wartosc poczatkowa\r\n        this.startValue = this.$dropdowns.data('value');\r\n\r\n        if (this.$dropdowns.length === 0) throw errors.elementNotFound(this.selector);\r\n\r\n        this.$dropdownButtons = this.$dropdowns.find('button'); // Przyciski dropdown\r\n\r\n        // Wstaw ukryte pole formularza\r\n        this.$dropdowns.append($('<input class=\"form-control\" type=\"hidden\">'));\r\n        this.$hiddenInputs = this.$dropdowns.find('input[type=\"hidden\"]');\r\n\r\n        // Ustaw opcje\r\n        this.setOptions(this.opts);\r\n        this.$dropdownItems = this.$dropdowns.find('.dropdown-item'); // Elementy menu\r\n        if (this.startValue) this.setActive(this.startValue);\r\n\r\n    }\r\n\r\n    // Dodaje listenery\r\n    addListeners() {\r\n\r\n        let $ = window.$;\r\n\r\n        let instance = this; // Ustaw kontekst\r\n        this.$dropdownItems.off('click');\r\n\r\n        let wheelEvent = 'onwheel' in document.createElement('div') ? 'wheel' : 'mousewheel';\r\n\r\n        function preventDefault(e) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        function disableScroll() {\r\n            window.addEventListener('DOMMouseScroll', preventDefault, { passive: false }); // older FF\r\n            window.addEventListener(wheelEvent, preventDefault, { passive: false }); // modern desktop\r\n            window.addEventListener('touchmove', preventDefault, { passive: false }); // mobile\r\n        }\r\n\r\n        function enableScroll() {\r\n            window.removeEventListener('DOMMouseScroll', preventDefault, { passive: false });\r\n            window.removeEventListener(wheelEvent, preventDefault, { passive: false });\r\n            window.removeEventListener('touchmove', preventDefault, { passive: false });\r\n        }\r\n\r\n        if (this.scrollBlock) {\r\n            // Blokowanie scrollingu body kiedy dropdown jest widoczny\r\n            this.$dropdowns.on('shown.bs.dropdown', function (e) {\r\n                e.stopPropagation();\r\n                disableScroll();\r\n\r\n            });\r\n\r\n            this.$dropdowns.on('hidden.bs.dropdown', function (e) {\r\n                e.stopPropagation();\r\n                enableScroll();\r\n            });\r\n        }\r\n\r\n        // Gdy klikniemy na dropdown item\r\n        this.$dropdownItems.on('click', function (e) {\r\n\r\n            e.preventDefault()\r\n\r\n                let $this = $(this);\r\n\r\n                // Sprawdz czy wartosci sie zmienila\r\n                if ($this.text() !== instance.displayed) {\r\n\r\n                    // Wyswietl nowa wartosc na przycisku\r\n                    instance.displayed = $this.text();\r\n                    instance.$dropdownButtons.text(instance.displayed);\r\n\r\n                    // Ustaw ukryte pole\r\n                    // Jeżeli opts jest obiektem\r\n                    if (Array.isArray(instance.opts) === false && typeof instance.opts === 'object') {\r\n                        instance.$hiddenInputs.attr({\r\n                            name: instance.$dropdowns.data('name'),\r\n                            value: instance.opts[instance.displayed]\r\n                        });\r\n\r\n                        instance.emit(new CustomEvent('change', {detail: instance.opts[instance.displayed]})); // Emituj nowa wartosc\r\n\r\n                    } else\r\n                        // Jezeli opts jest tablica\r\n                    if (Array.isArray(instance.opts) === true) {\r\n                        instance.$hiddenInputs.attr({\r\n                            name: instance.$dropdowns.data('name'),\r\n                            value: instance.displayed\r\n                        });\r\n\r\n                        instance.emit(new CustomEvent('change', {detail: instance.displayed})); // Emituj nowa wartosc\r\n\r\n                    }\r\n                }\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    // Inicjalizuje opcje\r\n    setOptions(opts) {\r\n\r\n        let $ = window.$;\r\n\r\n        let dropdownMenu, optionsLastIdx, idx;\r\n        let ariaLabelledBy = this.$dropdownButtons.attr('id');\r\n        let instance = this; // Ustaw kontekst\r\n\r\n        // Jeżeli opts jest obiektem\r\n        if (Array.isArray(opts) === false && typeof opts === 'object') {\r\n\r\n            let keys = Object.keys(opts);\r\n            optionsLastIdx = keys.length - 1;\r\n            idx = 0;\r\n\r\n            // Ustaw stan\r\n            this.setState();\r\n\r\n            // Aktualizuj ukryte pole\r\n            this.updateHiddenInput();\r\n\r\n            // Przygotuj elementy menu\r\n            dropdownMenu = `<div class=\"dropdown-menu\" aria-labelledby=\"${ariaLabelledBy}\">`;\r\n            do {\r\n                dropdownMenu += `<a class=\"dropdown-item\" href=\"#\">${keys[idx]}</a>`;\r\n            } while (idx++ < optionsLastIdx)\r\n\r\n            dropdownMenu += '</div>';\r\n\r\n        } else\r\n\r\n            // Jezeli opts jest tablica\r\n        if (Array.isArray(opts) === true) {\r\n\r\n            optionsLastIdx = opts.length - 1;\r\n            idx = 0;\r\n\r\n            // Ustaw stan\r\n            this.setState();\r\n\r\n            // Aktualizuj ukryte pole\r\n            this.updateHiddenInput();\r\n\r\n            // Przygotuj elementy menu\r\n            dropdownMenu = `<div class=\"dropdown-menu\" aria-labelledby=\"${ariaLabelledBy}\">`;\r\n            do {\r\n                dropdownMenu += `<a class=\"dropdown-item\" href=\"#\">${opts[idx]}</a>`;\r\n            } while (idx++ < optionsLastIdx)\r\n\r\n            dropdownMenu += '</div>';\r\n\r\n        }\r\n\r\n        this.$dropdownButtons.text(this.displayed); // Ustaw tekst na przycisku\r\n        this.$dropdownButtons.on('click', function () {\r\n            instance.initScrollBar();\r\n\r\n            // Scrollbar fix !\r\n            instance.$dropdownMenu.on('click', function (e) {\r\n                if (e.target.className.indexOf('ps__') !== -1) {\r\n                    e.stopPropagation();\r\n                }\r\n            })\r\n\r\n        })\r\n\r\n        this.$dropdowns.find('.dropdown-menu').remove();\r\n\r\n        this.$dropdownMenu = $(dropdownMenu);\r\n        this.$dropdownButtons.after(this.$dropdownMenu);\r\n\r\n\r\n        // Ustaw szerokosc dropdown menu na szerokosc przycisku - fix\r\n        this.$dropdownButtons.off('mouseenter');\r\n        this.$dropdownButtons.on('mouseenter', function () {\r\n           let $this = $(this);\r\n           $this.next().css('width', $this.css('width'));\r\n        });\r\n        this.$dropdownMenu.css({width: this.$dropdownMenu.prev('button').css('width')});\r\n\r\n    }\r\n\r\n    // Ustawia nowe opcje\r\n    updateOptions(opts) {\r\n\r\n        let newMenuItemsHtml = ''; // Generowany kod html dla elementow menu\r\n        this.opts = opts;\r\n\r\n        // Jeżeli opts jest obiektem\r\n        if (Array.isArray(this.opts) === false && typeof this.opts === 'object') {\r\n\r\n            let keys = Object.keys(this.opts);\r\n\r\n            // Usun istniejace elementy menu\r\n            this.$dropdownItems.remove();\r\n\r\n            // Generuj nowy kod html dla elementow menu <a class=\"dropdown-item\" href=\"#\">Wszystkie</a>\r\n            keys.forEach(function (key) {\r\n                newMenuItemsHtml += `<a class=\"dropdown-item\" href=\"#\">${key}</a>`;\r\n            });\r\n\r\n            this.$dropdownButtons.text(keys[0]); // Aktualizuj przycisk\r\n            this.$dropdownMenu.html(newMenuItemsHtml);\r\n            this.$dropdownItems = this.$dropdownMenu.find('.dropdown-item');\r\n            this.addListeners(); // Dodaj ponownie listenery\r\n\r\n            // Ustaw stan\r\n            this.setState();\r\n            this.initScrollBar();\r\n\r\n        } else\r\n\r\n            // Jezeli opts jest tablica\r\n        if (Array.isArray(this.opts) === true) {\r\n\r\n            // Usun istniejace elementy menu\r\n            this.$dropdownItems.off('click');\r\n            this.$dropdownItems.remove();\r\n\r\n            this.opts.forEach(function (opt) {\r\n                newMenuItemsHtml += `<a class=\"dropdown-item\" href=\"#\">${opt}</a>`;\r\n            });\r\n\r\n            this.$dropdownButtons.text(this.opts[0]); // Aktualizuj przycisk\r\n            this.$dropdownMenu.html(newMenuItemsHtml);\r\n            this.$dropdownItems = this.$dropdownMenu.find('.dropdown-item');\r\n            this.addListeners(); // Dodaj ponownie listenery\r\n\r\n            // Ustaw stan\r\n            this.setState();\r\n\r\n        }\r\n\r\n        // Aktualizuj ukryte pole\r\n        this.updateHiddenInput();\r\n\r\n    }\r\n\r\n    // Aktualizuje ukryte pole input\r\n    updateHiddenInput() {\r\n        // Ustaw ukryte pola\r\n        this.$hiddenInputs.attr({\r\n            name: this.$dropdowns.data('name'),\r\n            value: this.value\r\n        });\r\n    }\r\n\r\n    // Ustawia aktywna opcje\r\n    setActive(optionName) {\r\n\r\n        // Sprawdz poprawnosc argumentow\r\n        if (optionName === undefined) throw errors.argumentNotFound('optionName');\r\n\r\n        // Jeżeli opts jest obiektem\r\n        if (Array.isArray(this.opts) === false && typeof this.opts === 'object') {\r\n\r\n            // Sprawdz czy opcja istnieje\r\n            if ((optionName in this.opts) === false) throw new Error(`Option ${optionName} does not exist`);\r\n\r\n            // Ustaw stan\r\n            this.displayed = optionName;\r\n            this.value = this.opts[optionName];\r\n        }\r\n\r\n        // Jezeli opts jest tablica\r\n        if (Array.isArray(this.opts) === true) {\r\n\r\n            // Sprawdz czy opcja istnieje\r\n            if (this.opts.includes(optionName) === false) throw new Error(`Option ${optionName} does not exist`);\r\n\r\n            // Ustaw stan\r\n            this.displayed = optionName;\r\n            this.value = optionName;\r\n\r\n        }\r\n\r\n        this.$dropdownButtons.text(this.displayed); // Wyswietl nowa wartosc na przycisku\r\n        this.updateHiddenInput(); // Aktualizuj ukryty input\r\n\r\n    }\r\n\r\n    // Ustawia stan\r\n    setState() {\r\n\r\n        // Jeżeli opts jest obiektem\r\n        if (Array.isArray(this.opts) === false && typeof this.opts === 'object') {\r\n\r\n            let keys = Object.keys(this.opts);\r\n\r\n            // Ustaw stan\r\n            this.value = this.opts[keys[0]];\r\n            this.displayed = keys[0];\r\n            this.items = keys;\r\n\r\n        }\r\n        // Jezeli opts jest tablica\r\n        if (Array.isArray(this.opts) === true) {\r\n\r\n            // Ustaw stan\r\n            this.value = this.opts[0];\r\n            this.displayed = this.opts[0];\r\n            this.items = this.opts;\r\n\r\n        }\r\n    }\r\n\r\n    // Aktywuje scrollbar\r\n    initScrollBar() {\r\n\r\n        let instance = this;\r\n\r\n        if (this.scrollbar) this.scrollbar.destroy();\r\n\r\n        // Inicjuj scrollbar\r\n        this.scrollbar = new PerfectScrollbar(this.$dropdownMenu[0], {\r\n            minScrollbarLength: 20\r\n        });\r\n\r\n        this.$psRail = this.$dropdowns.find('[class*=\"ps__rail-y\"]');\r\n        this.$psThumb = this.$dropdowns.find('[class*=\"ps__thumb-y\"]');\r\n\r\n        // Wylacz pan mapy gdy kursor znajduje sie na scrollbar i mapa istnieje\r\n        this.$psRail.on('mouseenter', function () {\r\n            if (window.map) window.map.dragging.disable();\r\n\r\n        });\r\n\r\n        this.$dropdownMenu.on('mouseenter', function (e) {\r\n\r\n            e.stopPropagation();\r\n\r\n            instance.scrollbar.update();\r\n\r\n            if (window.map) {\r\n                if (window.map.scrollWheelZoom && window.map.dragging) {\r\n                    window.map.scrollWheelZoom.disable();\r\n                    window.map.dragging.disable();\r\n                }\r\n            }\r\n\r\n        })\r\n\r\n        // Wlacz pan mapy gdy kursor opuszcza dropdown i mapa istnieje\r\n        this.$psRail.on('mouseleave', function () {\r\n            if (window.map) {\r\n                if (window.map.dragging) window.map.dragging.enable();\r\n            }\r\n        })\r\n\r\n        this.$dropdownMenu.on('mouseleave', function () {\r\n\r\n            if (window.map) {\r\n                if (window.map.scrollWheelZoom && window.map.dragging) {\r\n                    window.map.scrollWheelZoom.enable();\r\n                    window.map.dragging.enable();\r\n                }\r\n            }\r\n\r\n        })\r\n\r\n        this.$psRail.on('mousedown mouseup click', function (e) {\r\n            e.stopPropagation();\r\n        })\r\n\r\n\r\n    }\r\n\r\n    destroy() {\r\n        this.$dropdownItems.off('click');\r\n        this.$hiddenInputs.remove();\r\n        this.$dropdownMenu.remove();\r\n    }\r\n\r\n}\r\n\r\nexport default KbfDropdown;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import config from \"../config/config\";\r\n\r\nlet apiEndpoint = config.apiEndpoint;\r\n\r\n// Sprawdza czy urzadzenie jest dotykowe\r\nexport function isTouchDevice() {\r\n    return (('ontouchstart' in window) || (navigator.maxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0));\r\n}\r\n\r\n// Zwraca liste nazw powiatow, areasGeoJSON - granice powiatow z nazwami\r\nexport function getAreaNames(areasGeoJSON) {\r\n    let result = [];\r\n    areasGeoJSON.features.forEach(function (feature) {\r\n        result.push(feature.properties.name); // Dodaj nazwe powiatu do listy powiatow\r\n    });\r\n\r\n    result = result.sort(function (current, next) {\r\n        return current.localeCompare(next);\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\n// Zwraca slownik wojewodztwo: powiaty, areasGeoJSON - granice powiatow z nazwami\r\nexport function getProvinceAreaDict(areasGeoJSON) {\r\n\r\n    let result = {};\r\n    areasGeoJSON.features.forEach(function (feature) {\r\n        result[feature.properties.province] = [...result[feature.properties.province] || [], feature.properties.name];\r\n        result[feature.properties.province].sort(function (current, next) {\r\n            return current.localeCompare(next);\r\n        });\r\n    })\r\n\r\n    return result;\r\n\r\n}\r\n\r\n// Zwraca liste nazw wojewodztw ze slownika provinceAreaDict\r\nexport function getProvinceNames(provinceAreaDict) {\r\n    let result = [];\r\n    result = Object.keys(provinceAreaDict);\r\n    result = result.sort(function (current, next) {\r\n        return current.localeCompare(next);\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\n// Konwertuje nazwe branzy\r\nexport function capitalizeIndustry(industry) {\r\n    let _industry = industry.toLowerCase();\r\n    return _industry.trim().substr(0, 1).toUpperCase() + _industry.trim().substr(1);\r\n}\r\n\r\n// Tworzy skrot\r\nexport function getEllipsis(string, length) {\r\n\r\n    let ellipsis;\r\n\r\n    if (string.length - 4 >= length - 4) ellipsis = string.trim().substring(0, length - 5) + ' ...';\r\n    if (string.length - 4 < length - 4) ellipsis = string;\r\n\r\n    return ellipsis;\r\n}\r\n\r\n// Przygotowuje opcje dla dropdown branz\r\nexport function getIndustriesOptions(industries, ellipsis = true) {\r\n\r\n    // Utworz tablice branz\r\n    let capitalizedIndustries = [];\r\n    industries.forEach(function (industry) {\r\n        if (ellipsis) capitalizedIndustries.push(capitalizeIndustry(getEllipsis(industry, 34)));\r\n        else capitalizedIndustries.push(capitalizeIndustry(industry));\r\n    });\r\n\r\n    // Utworz opcje\r\n    let opts = {};\r\n    let idx = 0;\r\n    capitalizedIndustries.forEach(function (capitalizedIndustry) {\r\n        opts[capitalizedIndustry] = industries[idx];\r\n        idx++;\r\n    })\r\n\r\n    return opts;\r\n}\r\n\r\n// Pobiera nazwy branz z rest api\r\nexport async function getIndustries() {\r\n    let $ = window.$;\r\n    return await $.get(`${apiEndpoint}/api/industries/`);\r\n}\r\n\r\n// Pobiera nazwy sub branz z rest api dla danej branzy\r\nexport async function getSubIndustries(industryName) {\r\n    let $ = window.$;\r\n    return await $.get(`${apiEndpoint}/api/sub-industries/?industry=${industryName}`);\r\n}\r\n\r\n// Pobiera dane do markerow dla mapy\r\nexport async function getCompanyMarkersData(requestData) {\r\n\r\n    let $ = window.$;\r\n    let url = '';\r\n    let provinceName = requestData['province-name'];\r\n    let areaName = requestData['area-name'];\r\n    let industry = requestData.industry;\r\n    let subIndustry = requestData['sub-industry'];\r\n\r\n    if (subIndustry.length > 0) url = `${apiEndpoint}/api/markers/?province-name=${provinceName}&area-name=${areaName}&industry=${industry}&sub-industry=${subIndustry}`;\r\n    if (subIndustry.length === 0) url = `${apiEndpoint}/api/markers/?province-name=${provinceName}&area-name=${areaName}&industry=${industry}`;\r\n\r\n    return await $.get(url).fail(function () {\r\n        $('.kbf-mini-preloader').hide();\r\n    });\r\n\r\n}\r\n\r\n// Zamienia placeholders w stringu\r\nexport function replacePlaceholders(placeholderMap, string) {\r\n\r\n    for (const [placeholder, value] of Object.entries(placeholderMap)) {\r\n        string = string.replace(placeholder, value);\r\n    }\r\n\r\n   return string;\r\n\r\n}","import KbfDropdown from \"./KbfDropdown\";\r\nimport {getAreaNames, getProvinceAreaDict, getProvinceNames} from \"../functions/library\";\r\nimport errors from \"../modules/Errors\";\r\n\r\nclass KbfAreaSwitcher extends EventTarget {\r\n\r\n    constructor(provincesId, areasId, scrollBlock = true) {\r\n\r\n        // Sprawdz czy podano argumenty\r\n        if (!provincesId) throw errors.argumentNotFound(provincesId);\r\n        if (!areasId) throw errors.argumentNotFound(areasId);\r\n\r\n        super();\r\n\r\n        this.provincesId = provincesId;\r\n        this.areasId = areasId;\r\n\r\n        this.scrollBlock = scrollBlock; // Czy blokowac scroll\r\n\r\n        this.areasDictionary = {}; // Slownik wojewodztwo - powiaty\r\n        this.provinces = []; // Nazwy wojewodztw\r\n        this.areas = []; // Nazwy powiatow\r\n\r\n        this.currentProvince = 'Wszystkie'; // Aktualnie wybrane wojewodztwo\r\n        this.currentArea = 'Wszystkie'; // Aktualnie wybrany powiat\r\n\r\n        this.init(); // Inicjalizuj\r\n        this.addListeners(); // Dodaj listenery\r\n\r\n    }\r\n\r\n\r\n    // Dodaje listenery\r\n    addListeners() {\r\n\r\n        let instance = this;\r\n\r\n        this.provincesDropdown.on('change', function (e) {\r\n\r\n                let detail = e.detail;\r\n\r\n                // Jesli wybrano wszystkie ustaw liste powiatow na wszystkie i wylacz dropdown powiatow\r\n                if (detail === 'Wszystkie') {\r\n                    instance.areasDropdown.updateOptions(['Wszystkie', ...instance.areas]);\r\n                    instance.currentArea = 'Wszystkie';\r\n                    instance.$areasDropdown.attr('disabled', 'true');\r\n                } else {\r\n                    instance.areasDropdown.updateOptions(['Wszystkie', ...instance.findAreas(detail)]); // Wyswietl liste powiatow dla wojewodztwa\r\n                    instance.$areasDropdown[0].removeAttribute('disabled');\r\n                }\r\n\r\n                instance.currentProvince = detail; // Ustaw nowe wojewodztwo\r\n                instance.emit(new CustomEvent('province-changed', {\r\n                    detail: {province: instance.currentProvince, area: instance.currentArea}\r\n                }));\r\n\r\n            }\r\n        );\r\n\r\n        this.areasDropdown.on('change', function (e) {\r\n\r\n            let detail = e.detail;\r\n\r\n            instance.currentArea = detail; // Ustaw nowy powiat\r\n            instance.areasDropdown.setActive(detail);\r\n\r\n            // Emituj zdarzenie\r\n            instance.emit(new CustomEvent('area-changed', {\r\n                detail: {province: instance.currentProvince, area: instance.currentArea}\r\n            }));\r\n\r\n        })\r\n\r\n    }\r\n\r\n    // Inicjalizuje\r\n    init() {\r\n\r\n\r\n        let $ = window.$;\r\n\r\n        let instance = this; // Ustaw kontekst\r\n\r\n        // Przygotuj dane o powiatach i wojewodztwach\r\n        let areasGeoJSON = window.areasGeoJSON;\r\n        this.areas = getAreaNames(areasGeoJSON);\r\n        this.areasDictionary = getProvinceAreaDict(areasGeoJSON)\r\n        this.provinces = getProvinceNames(this.areasDictionary);\r\n\r\n        // Inicjalizuj dropdown wojewodztw\r\n        this.provincesDropdown = new KbfDropdown('#' + this.provincesId, ['Wszystkie', ...this.provinces], this.scrollBlock);\r\n\r\n        // Inicjalizuj dropdown powiatow\r\n        this.areasDropdown = new KbfDropdown('#' + this.areasId, ['Wszystkie', ...this.areas], this.scrollBlock);\r\n\r\n        // Element dropdown powiatow\r\n        this.$areasDropdown = $('#' + this.areasId).find('button');\r\n        this.$areasDropdown.attr('disabled', 'true');\r\n\r\n        // Pobierz dane poczatkowe dla dropdown'ow\r\n        let provincesStartValue = this.provincesDropdown.$dropdowns.eq(0).data('startValue');\r\n        let areasStartValue = this.areasDropdown.$dropdowns.eq(0).data('startValue');\r\n\r\n        if (provincesStartValue) this.updateProvince(provincesStartValue);\r\n        if (provincesStartValue && areasStartValue) this.updateArea(areasStartValue);\r\n\r\n        // Aliasy\r\n        this.on = this.addEventListener;\r\n        this.off = this.removeEventListener;\r\n        this.emit = this.dispatchEvent;\r\n\r\n        // Ustaw responsywnosc dropdown'ow\r\n        $(window).off('resize', instance.resetDropdowns);\r\n        $(window).on('resize', instance.resetDropdowns.bind(instance));\r\n\r\n    }\r\n\r\n    // Resetuje dropdown'y\r\n    resetDropdowns() {\r\n        this.provincesDropdown.setActive('Wszystkie');\r\n        this.areasDropdown.updateOptions(['Wszystkie', ...this.areas]);\r\n        this.areasDropdown.setActive('Wszystkie');\r\n        this.$areasDropdown.attr('disabled', 'true');\r\n    }\r\n\r\n    // Ustawia wojewodztwo w dropdown\r\n    updateProvince(provinceName) {\r\n\r\n        let areas;\r\n\r\n        // Znajdz powiaty dla wojewodztwa\r\n        if (provinceName !== 'Wszystkie') {\r\n\r\n            areas = this.findAreas(provinceName);\r\n\r\n            this.$areasDropdown[0].removeAttribute('disabled');\r\n\r\n            // Zaktualizuj liste powiatow\r\n            if (Array.isArray(areas)) this.areasDropdown.updateOptions(['Wszystkie', ...areas]);\r\n        }\r\n\r\n        if (provinceName === 'Wszystkie') {\r\n            this.areasDropdown.setActive('Wszystkie');\r\n            this.$areasDropdown.attr('disabled', 'true');\r\n        }\r\n\r\n        this.provincesDropdown.setActive(provinceName); // Ustaw aktywne wojewodztwo\r\n        this.currentProvince = provinceName;\r\n\r\n    }\r\n\r\n    // Ustawia powiat w dropdown\r\n    updateArea(areaName) {\r\n\r\n        let provinceName = this.findProvince(areaName); // Znajdz wojewodztwo dla powiatu\r\n        let areas = this.findAreas(provinceName); // Znajdz powiaty dla wojewodztwa\r\n\r\n        this.currentArea = areaName;\r\n        this.currentProvince = provinceName;\r\n\r\n        this.areasDropdown.updateOptions(['Wszystkie', ...areas]); // Ustaw wszystkie powiaty na liscie\r\n\r\n        this.areasDropdown.setActive(this.currentArea); // Ustaw aktywny powiat\r\n        this.provincesDropdown.setActive(this.currentProvince); // Ustaw aktywne wojewodztwo\r\n    }\r\n\r\n    // Znajduje powiaty dla danego wojewodztwa\r\n    findAreas(provinceName) {\r\n        return this.areasDictionary[provinceName];\r\n    }\r\n\r\n    // Znajduje wojewodztwo dla danego powiatu\r\n    findProvince(areaName) {\r\n\r\n        if (areaName === 'Wszystkie') return;\r\n\r\n        let features = window.areasGeoJSON.features;\r\n        return features.filter(function (feature) {\r\n            return feature.properties.name === areaName;\r\n        })[0].properties.province;\r\n\r\n    }\r\n\r\n    // Usuwa komponent\r\n    destroy() {\r\n        if (this.areasDropdown) {\r\n            this.areasDropdown.destroy();\r\n            this.areasDropdown = undefined;\r\n        }\r\n        if (this.provincesDropdown) {\r\n            this.provincesDropdown.destroy();\r\n            this.provincesDropdown = undefined;\r\n        }\r\n    }\r\n}\r\n\r\nexport default KbfAreaSwitcher;","class KbfFooterTop {\r\n\r\n    constructor() {\r\n\r\n        this.init();\r\n        this.addListeners();\r\n    }\r\n\r\n    init() {\r\n\r\n        this.$footerBottom = $('.footer-bottom');\r\n        this.$footerTop = $('.footer-top');\r\n        this.$footerTop.css('transform', 'translateY(100%)')\r\n        this.$showFooterTop = $('#showFooterTop');\r\n\r\n\r\n    }\r\n\r\n    addListeners() {\r\n\r\n        let instance = this;\r\n\r\n        this.$showFooterTop.unbind().click(function (e) {\r\n\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            let $industriesSidebar = $('#industriesSidebar');\r\n            if ($industriesSidebar.length > 0) $industriesSidebar.removeClass('show');\r\n\r\n            instance.$footerTop.toggleClass('show-footer-top');\r\n            if (instance.$footerTop.hasClass('show-footer-top')) instance.$footerTop.css('transform', `translateY(-${parseInt(getComputedStyle($('.footer-bottom')[0]).height)}px)`)\r\n            else instance.$footerTop.css('transform', 'translateY(100%)');\r\n\r\n        });\r\n\r\n        this.$footerTop.click(function (e) {\r\n            e.stopPropagation();\r\n        })\r\n\r\n        this.$footerBottom.click(function (e) {\r\n            e.stopPropagation();\r\n        })\r\n\r\n        $(window).click(function () {\r\n\r\n            instance.$footerTop.css('transform', 'translateY(100%)');\r\n            instance.$footerTop.removeClass('show-footer-top');\r\n        })\r\n\r\n        $(window).scroll(function () {\r\n            instance.$footerTop.css('transform', 'translateY(100%)');\r\n            instance.$footerTop.removeClass('show-footer-top');\r\n        });\r\n\r\n        $(window).resize(function () {\r\n            instance.$footerTop.css('transform', 'translateY(100%)');\r\n            instance.$footerTop.removeClass('show-footer-top');\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default KbfFooterTop;","import errors from \"../modules/Errors\";\r\n\r\nclass KbfPreloaderButton extends EventTarget {\r\n\r\n    constructor(selector, auto= true) {\r\n\r\n        super();\r\n        let $ = window.$;\r\n\r\n        this.$preloaderButton = $(selector);\r\n\r\n        // Emituj wyjatek gdy nie podano selektora albo element nie zostal znaleziony\r\n        if (!selector || this.$preloaderButton.length === 0) throw errors.elementNotFound(selector);\r\n\r\n        this.auto = auto; // Czy automatycznie dodawac listener\r\n\r\n        this.init();\r\n        this.addListeners();\r\n\r\n    }\r\n\r\n    init() {\r\n\r\n        // Aliasy\r\n        this.on = this.addEventListener;\r\n        this.off = this.removeEventListener;\r\n        this.emit = this.dispatchEvent;\r\n\r\n        this.buttonCurrentContents = this.$preloaderButton.html(); // Aktualna zawartosc\r\n\r\n    }\r\n\r\n    triggerStart(buttonElement) {\r\n\r\n        let buttonGeometry = buttonElement.getBoundingClientRect(); // Aktualna geometria\r\n\r\n        let $buttonElement = $(buttonElement);\r\n        let bgColor;\r\n\r\n        $buttonElement.on('click', function () {\r\n            bgColor = getComputedStyle(buttonElement, ':hover').backgroundColor;\r\n        })\r\n\r\n\r\n        this.$preloaderButton.trigger({\r\n            type: 'start-preloader',\r\n            buttonGeometry,\r\n            bgColor\r\n        });\r\n\r\n        this.emit(new CustomEvent('click'));\r\n    }\r\n\r\n    // Startuje preloader\r\n    startPreloader(buttonElement, buttonGeometry, bgColor) {\r\n\r\n        let $ = window.$;\r\n\r\n        let $buttonElement = $(buttonElement);\r\n\r\n        $buttonElement.attr('disabled', 'disabled');\r\n        $buttonElement.css('width', buttonGeometry.width + 'px');\r\n        $buttonElement.css('height', buttonGeometry.height + 'px');\r\n        $buttonElement.css('padding', 0);\r\n        $buttonElement.css('background-color', bgColor);\r\n        $buttonElement.html(KbfPreloaderButton.preloaderMarkup);\r\n\r\n        this.emit(new CustomEvent('click'));\r\n\r\n    }\r\n\r\n    // Zatrzymuje preloader\r\n    stopPreloader() {\r\n        this.$preloaderButton.html(this.buttonCurrentContents).attr('style', '');\r\n        this.$preloaderButton.removeAttr('disabled');\r\n    }\r\n\r\n    addListeners() {\r\n\r\n        let instance = this;\r\n\r\n        // Rejestruj handler warunkowo\r\n        if (this.auto) {\r\n            this.$preloaderButton.on('click', function () {\r\n               instance.triggerStart(this);\r\n            });\r\n        }\r\n\r\n        this.$preloaderButton.on('start-preloader', function (e) {\r\n            instance.startPreloader(this, e.buttonGeometry, e.bgColor);\r\n        })\r\n\r\n    }\r\n}\r\n\r\nKbfPreloaderButton.preloaderMarkup = '<div class=\"kbf-button-preloader\"><div id=\"dots\"><span></span><span></span><span></span></div></div>';\r\nexport default KbfPreloaderButton;","import KbfAreaSwitcher from \"../../components/KbfAreaSwitcher\";\r\nimport KbfFooterTop from \"../../components/KbfFooterTop\";\r\nimport KbfPreloaderButton from \"../../components/KbfPreloaderButton\";\r\n\r\n// Dane o wojewodztwach i powiatach\r\nimport provincesGeoJSON from '../../map/provinces.json'\r\nimport areasGeoJSON from '../../map/areas.json'\r\n\r\nclass App {\r\n\r\n    constructor() {\r\n        window.provincesGeoJSON = provincesGeoJSON;\r\n        window.areasGeoJSON = areasGeoJSON;\r\n\r\n        this.init();\r\n        this.addListeners();\r\n    }\r\n\r\n    init() {\r\n        new KbfAreaSwitcher('provinces', 'areas');\r\n        new KbfFooterTop();\r\n\r\n        // First section industries sub-menu opening and closing\r\n        $(\"#industriesSidebarOpenButton\").click(function() {\r\n            $(\"#top-section\").removeClass('col-xl-12');\r\n            $(\"#top-section\").addClass('col-xl-9');\r\n\r\n            $(\"#industriesSidebar\").addClass('d-xl-block');\r\n\r\n            $(\"#industriesSidebarOpenButton\").removeClass('d-xl-block')\r\n            $(\"#industriesSidebarOpenButton\").addClass('d-none')\r\n\r\n            $(\"#industriesSidebarCloseButton\").addClass('d-xl-block');\r\n        });\r\n\r\n        $(\"#industriesSidebarCloseButton\").click(function() {\r\n            $(\"#top-section\").removeClass('col-xl-9');\r\n            $(\"#top-section\").addClass('col-xl-12');\r\n\r\n            $(\"#industriesSidebar\").removeClass('d-xl-block');\r\n            $(\"#industriesSidebar\").addClass('d-none');\r\n\r\n            $(\"#industriesSidebarCloseButton\").removeClass('d-xl-block')\r\n            $(\"#industriesSidebarCloseButton\").addClass('d-none')\r\n\r\n            $(\"#industriesSidebarOpenButton\").addClass('d-xl-block');\r\n        });\r\n\r\n        this.$kbfSearch = $('.kbf-search');\r\n        this.$form = $('form');\r\n        new KbfPreloaderButton('.kbf-search');\r\n    }\r\n\r\n    addListeners() {\r\n        let instance = this;\r\n\r\n        this.$kbfSearch.on('click', function () {\r\n            instance.$form.submit();\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default App;","import App from './components/App';\r\n\r\n(function($){\r\n\r\n    $(document).ready(function () {\r\n\r\n        new App();\r\n\r\n    })\r\n\r\n})(window.$)"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_arrayLikeToArray","arr","len","arr2","Array","_arrayWithoutHoles","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","from","_unsupportedIterableToArray","o","minLen","n","toString","call","slice","constructor","name","test","_nonIterableSpread","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_setPrototypeOf","p","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","value","_typeof","obj","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","assertThisInitialized","_getPrototypeOf","getPrototypeOf","_isNativeFunction","fn","Function","indexOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_construct","Parent","args","Class","isNativeReflectConstruct","a","push","apply","bind","arguments","_wrapNativeSuper","_cache","Map","undefined","isNativeFunction","has","get","set","Wrapper","errors","elementNotFound","selector","Error","formNotFound","formName","argumentNotFound","argumentName","substring","toUpperCase","noValidator","noGeoCoords","KbfDropdown","opts","scrollBlock","init","addListeners","initScrollBar","$","window","on","addEventListener","off","removeEventListener","emit","dispatchEvent","$dropdowns","dataOptions","data","split","startValue","$dropdownButtons","find","append","$hiddenInputs","setOptions","$dropdownItems","setActive","wheelEvent","document","createElement","preventDefault","disableScroll","passive","enableScroll","stopPropagation","$this","text","displayed","attr","CustomEvent","detail","dropdownMenu","optionsLastIdx","idx","ariaLabelledBy","keys","setState","updateHiddenInput","$dropdownMenu","className","remove","after","next","css","width","prev","newMenuItemsHtml","forEach","html","opt","optionName","includes","items","scrollbar","destroy","PerfectScrollbar","minScrollbarLength","$psRail","$psThumb","map","dragging","disable","update","scrollWheelZoom","enable","EventTarget","runtime","exports","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","makeInvokeMethod","tryCatch","arg","type","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","displayName","defineIteratorMethods","method","isGeneratorFunction","genFun","ctor","mark","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","then","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","done","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","object","reverse","pop","iterable","iteratorMethod","isNaN","skipTempReset","charAt","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","getAreaNames","areasGeoJSON","features","feature","properties","sort","current","localeCompare","getProvinceAreaDict","province","getProvinceNames","provinceAreaDict","KbfAreaSwitcher","provincesId","areasId","areasDictionary","provinces","areas","currentProvince","currentArea","provincesDropdown","areasDropdown","updateOptions","$areasDropdown","findAreas","removeAttribute","area","provincesStartValue","eq","areasStartValue","updateProvince","updateArea","resetDropdowns","provinceName","areaName","findProvince","filter","KbfFooterTop","$footerBottom","$footerTop","$showFooterTop","unbind","click","$industriesSidebar","removeClass","toggleClass","hasClass","parseInt","getComputedStyle","height","scroll","resize","KbfPreloaderButton","auto","$preloaderButton","buttonCurrentContents","buttonElement","buttonGeometry","getBoundingClientRect","$buttonElement","bgColor","backgroundColor","trigger","preloaderMarkup","removeAttr","triggerStart","startPreloader","App","provincesGeoJSON","addClass","$kbfSearch","$form","submit","ready"],"mappings":"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCvFMI;EAEF,iBAAc;EAAA;;EACVxP,IAAAA,MAAM,CAACyP,gBAAP,GAA0BA,gBAA1B;EACAzP,IAAAA,MAAM,CAACsL,YAAP,GAAsBA,YAAtB;EAEA,SAAK1L,IAAL;EACA,SAAKC,YAAL;EACH;;;;aAED,gBAAO;EACH,UAAIoM,eAAJ,CAAoB,WAApB,EAAiC,OAAjC;EACA,UAAIyB,YAAJ,GAFG;;EAKH3N,MAAAA,CAAC,CAAC,8BAAD,CAAD,CAAkCgO,KAAlC,CAAwC,YAAW;EAC/ChO,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBkO,WAAlB,CAA8B,WAA9B;EACAlO,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkB2P,QAAlB,CAA2B,UAA3B;EAEA3P,QAAAA,CAAC,CAAC,oBAAD,CAAD,CAAwB2P,QAAxB,CAAiC,YAAjC;EAEA3P,QAAAA,CAAC,CAAC,8BAAD,CAAD,CAAkCkO,WAAlC,CAA8C,YAA9C;EACAlO,QAAAA,CAAC,CAAC,8BAAD,CAAD,CAAkC2P,QAAlC,CAA2C,QAA3C;EAEA3P,QAAAA,CAAC,CAAC,+BAAD,CAAD,CAAmC2P,QAAnC,CAA4C,YAA5C;EACH,OAVD;EAYA3P,MAAAA,CAAC,CAAC,+BAAD,CAAD,CAAmCgO,KAAnC,CAAyC,YAAW;EAChDhO,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBkO,WAAlB,CAA8B,UAA9B;EACAlO,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkB2P,QAAlB,CAA2B,WAA3B;EAEA3P,QAAAA,CAAC,CAAC,oBAAD,CAAD,CAAwBkO,WAAxB,CAAoC,YAApC;EACAlO,QAAAA,CAAC,CAAC,oBAAD,CAAD,CAAwB2P,QAAxB,CAAiC,QAAjC;EAEA3P,QAAAA,CAAC,CAAC,+BAAD,CAAD,CAAmCkO,WAAnC,CAA+C,YAA/C;EACAlO,QAAAA,CAAC,CAAC,+BAAD,CAAD,CAAmC2P,QAAnC,CAA4C,QAA5C;EAEA3P,QAAAA,CAAC,CAAC,8BAAD,CAAD,CAAkC2P,QAAlC,CAA2C,YAA3C;EACH,OAXD;EAaA,WAAKC,UAAL,GAAkB5P,CAAC,CAAC,aAAD,CAAnB;EACA,WAAK6P,KAAL,GAAa7P,CAAC,CAAC,MAAD,CAAd;EACA,UAAI0O,kBAAJ,CAAuB,aAAvB;EACH;;;aAED,wBAAe;EACX,UAAI7V,QAAQ,GAAG,IAAf;EAEA,WAAK+W,UAAL,CAAgB1P,EAAhB,CAAmB,OAAnB,EAA4B,YAAY;EACpCrH,QAAAA,QAAQ,CAACgX,KAAT,CAAeC,MAAf;EACH,OAFD;EAGH;;;;;;ECzDL,CAAC,UAAS9P,CAAT,EAAW;EAERA,EAAAA,CAAC,CAACqB,QAAD,CAAD,CAAY0O,KAAZ,CAAkB,YAAY;EAE1B,QAAIN,GAAJ;EAEH,GAJD;EAMH,CARD,EAQGxP,MAAM,CAACD,CARV;;;;;;"}